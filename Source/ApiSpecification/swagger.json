{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/kirypto/TimelineTracker/1.0.0"
  } ],
  "info" : {
    "version" : "0.1.0",
    "title" : "Timeline Tracker API",
    "license" : {
      "url" : "https://github.com/kirypto/TimelineTracker/blob/master/LICENSE.txt",
      "name" : "GNU General Public License v3.0"
    },
    "contact" : {
      "url" : "https://github.com/kirypto/TimelineTracker/issues",
      "name" : "kirypto"
    }
  },
  "paths" : {
    "/hello" : {
      "get" : {
        "tags" : [ "public" ],
        "summary" : "Hello World GET handler",
        "operationId" : "helloWorld",
        "description" : "Returs a simple hello world greeting\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "excited",
          "description" : "requests an excited greeting (with an exclamation mark)",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "example" : true
          }
        }, {
          "in" : "query",
          "name" : "name",
          "description" : "request a greeting for a specific person",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "James T. Kirk"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "simple greeting",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "example" : {
                  "response" : "Hello, World."
                }
              },
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "Hello, World!"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/api/location" : {
      "post" : {
        "summary" : "Creates a new Location",
        "description" : "Creates a new Location with a generated id and returns it.\n",
        "tags" : [ "Locations" ],
        "requestBody" : {
          "required" : true,
          "description" : "*Notes*\n- *When POSTing a Location, providing an id is not required as it will\nbe generated. If one is provided it will be ignored.*\n- *For each of the ranges making up the span field, either the range\nobject or a single value can be provided. If a sinlge value is\nprovided, it will be used as both the lower and higher value of the\nrange.*\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          }
        }
      }
    },
    "/api/locations" : {
      "get" : {
        "summary" : "Retrieves all Locations",
        "tags" : [ "Locations" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "name",
          "description" : "Filters to Locations with the queried name",
          "schema" : {
            "type" : "string"
          },
          "example" : "The Great Pyramid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationIds"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Range" : {
        "description" : "A single-dimensional range with a lower and higher value.",
        "type" : "object",
        "properties" : {
          "lower" : {
            "type" : "number",
            "format" : "float",
            "example" : -5
          },
          "higher" : {
            "type" : "number",
            "format" : "float",
            "example" : 15
          }
        }
      },
      "PositionalRange" : {
        "description" : "A multi-dimensional range, with a range for each dimension.",
        "type" : "object",
        "properties" : {
          "latitudeRange" : {
            "$ref" : "#/components/schemas/Range"
          },
          "longitudeRange" : {
            "$ref" : "#/components/schemas/Range"
          },
          "altitudeRange" : {
            "$ref" : "#/components/schemas/Range"
          },
          "continuumRange" : {
            "$ref" : "#/components/schemas/Range"
          },
          "realityRange" : {
            "$ref" : "#/components/schemas/Range"
          }
        }
      },
      "Position" : {
        "description" : "A multi-dimensional point, currently intended to support up to the 5th dimension.\n- Dimensions 1-3 => typical coordinate system consisting of latitude, longitude, and height relative to sea level.\n- Dimension 4 => \"time\" or \"duration\", the time that the position is tied to.\n- Dimension 5 => \"decision space\" or \"alternate realities\" which may be jumped between.\n",
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "float",
            "example" : -10.9378
          },
          "longitude" : {
            "type" : "number",
            "format" : "float",
            "example" : -8.61222
          },
          "altitude" : {
            "type" : "number",
            "format" : "float",
            "example" : 816.72
          },
          "continuum" : {
            "type" : "number",
            "format" : "float",
            "example" : 737194.31
          },
          "reality" : {
            "type" : "integer",
            "format" : "int",
            "example" : 1
          }
        }
      },
      "PositionalTransition" : {
        "description" : "A combination of a position and a type of transition which describe how the transition from the previous position to this position is made.\n- Interpolated => the position smoothly interpolates the position in specific dimensions depending on the query dimension.\n- Jump => the earlier position is used to \"infill\" all possible queries between two points in a sequence until the latter position is reached, at which time the latter position is instantaneously used.\n",
        "type" : "object",
        "properties" : {
          "position" : {
            "$ref" : "#/components/schemas/Position"
          },
          "transition" : {
            "type" : "string",
            "enum" : [ "Interpolated", "Jump" ],
            "example" : "Jump"
          }
        }
      },
      "Timeline" : {
        "description" : "A sequence of positional transitions.",
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PositionalTransition"
        },
        "example" : [ {
          "position" : {
            "latitude" : -10.9378,
            "longitude" : -8.61222,
            "altitude" : 816.72,
            "continuum" : 737194.31,
            "reality" : 1
          },
          "transition" : "Jump"
        } ]
      },
      "Traveler" : {
        "description" : "A person or thing which has a timeline consisting of the positions\nit visits. A traveler can interact with other travelers and locations.\n",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "prefixed-uuid",
            "example" : "traveler-abad1dea-0000-4000-0000-000000000000"
          },
          "name" : {
            "type" : "string",
            "example" : "James T. Kirk"
          },
          "description" : {
            "type" : "string",
            "example" : "He is captain of the NCC-1701 Starship Enterprise, and leads an \nongoing mission to explore strange new worlds, to seek out new life\nand new civilizations, and to boldly go where no one has gone before.\n"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/Timeline"
          }
        }
      },
      "LocationId" : {
        "description" : "A unique identifier for a Location",
        "type" : "string",
        "format" : "prefixed-uuid",
        "example" : "location-abad1dea-0000-4000-0000-000000000000"
      },
      "LocationIds" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/LocationId"
        }
      },
      "Location" : {
        "description" : "A place of significance that travelers can visit and events can occur\nat which cover a multi-dimensional area. Most locations will consist of\nan area that spans 4 of the 5 dimensions; a 3-dimensional area and the\ntime range from when it was constructed to when it will be no more. In\nthis case, it's range in the 5th dimension is instantaneous _(the low\nand high values are equal)_.\n",
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "name" : {
            "type" : "string",
            "example" : "The Great Pyramid"
          },
          "description" : {
            "type" : "string",
            "example" : "A great triangular structure in Egypt constructed long ago.\n"
          },
          "span" : {
            "$ref" : "#/components/schemas/PositionalRange"
          }
        }
      },
      "Event" : {
        "description" : "words\n",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "prefixed-uuid",
            "example" : "event-abad1dea-0000-4000-0000-000000000000"
          },
          "name" : {
            "type" : "string",
            "example" : "Skirmish in the market"
          },
          "description" : {
            "type" : "string",
            "example" : "Attacked by the Briggand Band, the civilians ran in despair until\nthe courageous Band Of Defenders came to the rescue.\n"
          },
          "position" : {
            "$ref" : "#/components/schemas/Position"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "travelers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Traveler"
            }
          }
        }
      }
    }
  },
  "tags" : [ {
    "name" : "Locations",
    "description" : "Requests regarding Location resources."
  } ]
}